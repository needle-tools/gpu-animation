BEGIN_PROPERTIES
END_PROPERTIES

BEGIN_DEFINES
	#pragma multi_compile_instancing
	#include "Packages/com.needle.gpu-animation/Runtime/Shaders/Include/Skinning.cginc"
END_DEFINES

BEGIN_SUBSHADERS
/*
"Include/Skinning.cginc"

"C:/git/needle-packages-master/development/gpu-animation/package/Runtime/Shaders/Include/AnimationTypes.cginc"
"C:/git/needle-packages-master/development/gpu-animation/package/Runtime/Shaders/Include/SkinningUtils.cginc"
"C:/git/needle-packages-master/development/gpu-animation/package/Runtime/Shaders/Include/SkinningFunctions.cginc"
"C:/git/needle-packages-master/development/gpu-animation/package/Runtime/Shaders/Include/SkinningProperties.cginc"
*/
//"C:/git/needle-packages-master/development/gpu-animation/package/Runtime/Shaders/Include/Skinning.cginc"
//"Packages/com.needle.gpu-animation/Runtime/Shaders/Include/Skinning.cginc"
END_SUBSHADERS

BEGIN_CODE
	void ModifyVertex(inout VertexData v, inout ExtraV2F d)
	{
        UNITY_SETUP_INSTANCE_ID(v);
        
        const float time = 0;// _Time.y;// unity_InstanceID;// GetTime(unity_InstanceID);
        const TextureClipInfo clip = ToTextureClipInfo(_CurrentAnimation);
        skin(v.vertex, v.normal, v.vertexID, _Skinning, _Skinning_TexelSize, _Animation, _Animation_TexelSize, clip.IndexStart, clip.Frames, (time * (clip.FramesPerSecond)));
        
	}

END_CODE

